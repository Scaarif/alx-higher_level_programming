# 101-lazy_matrix_mul.py
==============================================================
 Testing the functions defined in the module 101-lazy_matrix_mul.py 
===============================================================
The function matrix_mul() simply returns a product matrix (of 2 rectangular matrices)
The args must be matrices and an exception, TypeError
is raised if any of the parameter provided does not qualify.

For other types of exceptions / checks done by the function, refer to the module's __doc__

Valid Matrix Arguments
======================
>>> matrix = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> mat1 = [[1, 2], [3, 4]]
>>> mat2 = [[1, 2], [3, 4]]
>>> matrix(mat1, mat2)
array([[ 7, 10],
       [15, 22]])
>>> matrix([], [[]])
Traceback (most recent call last):
ValueError: shapes (0,) and (1,0) not aligned: 0 (dim 0) != 1 (dim 0)
>>> matrix([[1,2], [3,4]], [])
Traceback (most recent call last):
ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)
>>> matrix([[1,2], [3,4]], [[2,3,4], [5,6,7], [8,9,10]])
Traceback (most recent call last):
ValueError: shapes (2,2) and (3,3) not aligned: 2 (dim 1) != 3 (dim 0)
>>> matrix([[1,2], [3,4]], [[2,3,4], [5,6]])
Traceback (most recent call last):
TypeError: Object arrays are not currently supported
>>> matrix([[2,3,4], [5,6,7]], [1,2,3,4])
Traceback (most recent call last):
ValueError: shapes (2,3) and (4,) not aligned: 3 (dim 1) != 4 (dim 0)
>>> matrix([[1,2], [3,4]], [[2,3,4], [5,6,'7']])
Traceback (most recent call last):
TypeError: invalid data type for einsum
>>> matrix([[1,2], [3,4.665]], [[2,3,4], [5,6.6,7]])
array([[12.   , 16.2  , 18.   ],
       [29.325, 39.789, 44.655]])

Other cases:
=================
No Argument
>>> matrix()
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
